name: vHive stock-only stargz tests

on:
  push:
    branches: [ main, legacy-firecracker-v0.24.0-with-upf-support ]
    paths-ignore:
    - 'docs/**'
    - '**.md'
    - 'function-images/**'
  pull_request:
    branches: [ main, legacy-firecracker-v0.24.0-with-upf-support ]
    paths-ignore:
    - 'docs/**'
    - '**.md'
    - 'function-images/**'
  workflow_dispatch:

env:
  GOOS: linux
  GO111MODULE: on

jobs:
  stargz-container-test:
    name: Test running stargz-based image using kn
    env:
      KIND_VERSION: v0.22.0
      K8S_VERSION: v1.29
      YAML_DIR: workloads/container
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        service:
          [
            trace_func_go,
          ]

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: "true"
      - name: Checkout LFS objects
        run: git lfs checkout

      - name: Set up Go version in go.mod file
        uses: actions/setup-go@v5
        with:
          go-version-file: ${{ github.workspace }}/go.mod
          cache-dependency-path: |
            **/go.sum
            **/go.mod

      - name: Build setup scripts
        run: pushd scripts && go build -o setup_tool && popd

      - name: Create k8s Kind Cluster
        run: bash ./scripts/stargz/01-kind.sh

      - name: Install Serving
        run: bash ./scripts/stargz/02-serving.sh

      - name: Install Kourier
        run: bash ./scripts/stargz/02-kourier.sh

      - name: Setup domain and autoscaler
        run: |
          INGRESS_HOST="127.0.0.1"
          KNATIVE_DOMAIN=$INGRESS_HOST.sslip.io
          kubectl patch configmap -n knative-serving config-domain -p "{\"data\": {\"$KNATIVE_DOMAIN\": \"\"}}"
          kubectl patch configmap -n knative-serving config-autoscaler -p "{\"data\": {\"allow-zero-initial-scale\": \"true\"}}"

      - name: Setup stock-only node
        run: ./scripts/setup_tool setup_node stock-only use-stargz

      - name: Check containerd service is running
        run: sudo screen -list | grep "containerd"

      - name: Check stargz-snapshotter is running
        run: sudo systemctl is-active --quiet stargz-snapshotter

      - name: Run test container with kn
        run: kn service apply stargz-test -f ./configs/knative_workloads/stargz-node.yaml --concurrency-target 1 

      - name: Curl container
        run: curl http://stargz-test.default.127.0.0.1.sslip.io | grep "Hello World"